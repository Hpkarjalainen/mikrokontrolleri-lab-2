#include <stdio.h>
#define LED 12 
volatile byte sec=0;
volatile byte min=0;
volatile byte hour=0;
void setup()
{
Serial.begin(9600);
Serial.print("Timer int test \n");
pinMode(LED, OUTPUT);
noInterrupts();               // disable all interrupts
TCCR1A = 0;                   //Timer/Counter 1 Control Register A nollataan
TCCR1B = 0;                   //sama register B:lle
TCNT1 = 0;                    //timer/counter 1?
OCR1A = 62500;                // output compare match register 16MHz/256/2Hz eli vaihdetaan taajuutta pienemm√§lle?
TCCR1B = TCCR1B | B00001100 ; // CTC mode? and 256 prescaler?
TIMSK1 = TIMSK1 | B00000010 ; // enable timer compare interrupt - Timer/Counter 1 Interrupt Mask Register
interrupts();                 // enable all interrupts
}

void time_converter(char *holder, int time) {
    if (time < 10) {
        sprintf(holder, "0%d", time);
    } else {
        sprintf(holder, "%d", time);
    }
}


void loop()
{
}
ISR(TIMER1_COMPA_vect)        // timer compare interrupt service routine
{
    char sec_str[3], min_str[3], hour_str[3];

    sec++;
    if (sec >= 60) {
        sec = 0;
        min++;
        if (min >= 60) {
            min = 0;
            hour++;
            if (hour > 23) {
                hour = 0;
            }
        }
    }

    time_converter(hour_str, hour)
    time_converter(min_str, min)
    time_converter(sec_str, sec)

    Serial.printf("Timer int count: %s:%s:%s\n", hour_str, min_str, sec_str);
    digitalWrite(LED, digitalRead(LED) ^ 1);   //xor
}
